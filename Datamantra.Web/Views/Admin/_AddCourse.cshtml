@model Datamantra.Model.Entity.Course

@{
    var _isImage = Model != null && !string.IsNullOrEmpty(Model.Image) ? true : false;
}

@using (Html.BeginForm("SaveCourse", "Admin", FormMethod.Post, new { @id = "formAddCourse", autocomplete = "off", enctype = "multipart/form-data", data_ajax = "false" }))
{
    <div class="form-horizontal">
        <h4>Course</h4>
        <hr />
        @Html.HiddenFor(model => model.CourseId)

        <div class="form-group">
            @Html.Label("Category", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewData["Categorylist"] as SelectList, "Select Category", new { maxlength = "50", @style = "", tabindex = 16, @id = "CategoryId", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Course Name", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CourseName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rating", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Rating, new { @class = "form-control", @max = "5", @required = "required" })
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Price", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Discounted Price", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DiscountedPrice, new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.DiscountedPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Enrolled Count", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EnrolledCount, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EnrolledCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Image", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="fileUpload" id="addfile">
                    <span>Browse</span>
                    @Html.TextBoxFor(x => x.Image, new { @type = "file", @class = "floatL textFlow upload", @onchange = "return checkFileExtension(this);" })
                    @*<input type="file" id="Image" name="Image" class="floatL textFlow upload" tabindex="1" onchange="return checkFileExtension(this);" />*@
                </span>
                <span id="lblFileName"></span>
                <i class="fa fa-spinner fa-spin" style="display: none; margin-top:5px;margin-left:10px" id="loader"></i>
                <label class="error" id="lblErrorAttachment" style="display: none;"></label>
                <label class="error" id="lblUploadError" style="display: none"></label>
                <i class="fa fa-times-circle clear_icon" title="Clear Image" id="btnClearImage" onclick="clearImage()" style="display:none;cursor:pointer;"></i>

                <a id="btnUpload" onclick="uploadImage();" class="hint--bottom mLeft5" data-hint="Upload" href="javascript:void(0)" style="display:none;"><i class="fa fa-upload icon_sm icon_blue"></i></a>
                <div class="spacer5"></div>
                <div class="clearfix"></div>
                <i style="color: #888888; width: 250px; font-size: 12px; font-weight: normal;" class="">
                    We recommend a logo size of 300 x 200 pixels. <br />Acceptable formats (png, jpeg, jpg, gif). <br />The maximum file size can be 2MB or less.<br />
                </i>
                <div class="clear"></div>
                <div class="spacer10"></div>

                @*@Html.TextBoxFor(model => model.Image, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Short Description", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control",  @required = "required" })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Long Description", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LongDescription, new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-right">
            <button type="button" id="btnClear" onclick="ShowCourse()" data-dismiss="modal" class="btn btn-default  mTop10 margin-right10" tabindex="">
                Back to List
            </button>
            <button type="submit" id="btnSaveCourse" onclick="SaveCourse('@Model.CourseId');" class="btn btn-primary text-uppercase margin-right15">
                <i id="btnSaveCourseLoader" style="display:none;" class="floatR mTop5 fa fa-spinner fa-spin mLeft10"></i>
                <span>Save Course</span>
            </button>
            <div class="clear"></div>
        </div><div class="clear"></div>
    </div>
}
<div>

</div>
<script type="text/javascript">
    $(document).ready(function () {

        CKEDITOR.replace('LongDescription');

        $('#Image').change(function () {
            var fileSize = $('#Image').val().length;
            if (fileSize > 0) {
                var theSplit = $('#Image').val().split('\\');
                lblFileName.innerHTML = theSplit[theSplit.length - 1];
                // $('#btnUpload').show();
                uploadImage();
                // $("#btnWebsitepreview").attr('disabled', true);
                // $("#btnWebsitepreview").css({ 'pointer-events': 'none' });
            }
            else {
                // $('#btnUpload').hide();
                // $("#btnWebsitepreview").attr('disabled', false);
                // $("#btnWebsitepreview").css({ 'pointer-events': 'auto' });
            }
        });

        $("#formAddCourse").validate(
        {
            rules: {
                CourseName: {
                    required: true,
                },
                CategoryId: {
                    required: true,
                },
                Rating: {
                    required: true,
                }, Price: {
                    required: true,
                }, DiscountedPrice: {
                    required: true,
                }, ShortDescription: {
                    required: true,
                    maxlength: 500,
                }, LongDescription: {
                    required: true,
                },
            },
            messages: {
                CourseName: {
                    required: 'Please Enter Course Name',
                },
                CategoryId: {
                    required: 'Please select the Category Name',
                }, Rating: {
                    required: 'Please enter the Rating',
                }, Price: {
                    required: 'Please enter the Actual Price',
                }, DiscountedPrice: {
                    required: 'Please enter the Discounted Price',
                }, ShortDescription: {
                    required: 'Please enter the short description of the course',
                    maxlength: 'Short description should not exceeds more than 500 characters',
                }, LongDescription: {
                    required: 'Please enter the detail description of the course',
                },
            },
        });
    });


    function uploadImage() {
        // $("#btnWebsitepreview").attr('disabled', true);
        // $("#btnWebsitepreview").css({ 'pointer-events': 'none' });
        if (_val) {
            $('#loader').show();
            $('#BasePageLoader').show();
            var img = document.getElementById("imgExistingImage");
            // img.setAttribute('src', '/Content/Images/Loaders/DatatableLoader.gif');   // show the loader
            if ($('#Image').length > 0) {   // only submit if it has file
                debugger;
                // var form = new FormData($("#formAddCourse")[0]);
                var form = new FormData($('#formAddCourse input[type="file"]')[0].files[0]);

                $.ajax({
                    url: '/Admin/_LogoFileUpload/',
                    type: 'POST',
                    data: form,
                    async: true,
                    cache: false,
                    contentType: false,
                    processData: false,

                    success: function (data) {
                        debugger;
                        // $('#btnUpload').hide();
                        $('#formAddCourse').get(0).reset();
                        if (data.ThemeColor != null && data.ThemeColor != "") {
                            $('#colorpicker').colorpicker('setValue', data.ThemeColor);
                            $("ColorCode").val(data.ThemeColor);
                        }
                        if (data.BusinessLogoPath != null && data.BusinessLogoPath != "") {
                            $("#hdnBusinessLogo").val(data.BusinessLogoPath);
                            $("#lblFileName").html(data.BusinessLogoName);
                        }
                        $.getJSON("/Admin/_DisplayLogoImage?t=" + new Date(), { path: data.BusinessLogoPath, fixedWidth: 150, fixedHeight: 150 }, function (data) {
                            if (data != null) {
                                var base64Image = data;
                                img.setAttribute('src', 'data:image/jpeg;base64,' + base64Image);
                                $("#showPreview").show();
                                $('#loader').hide();

                            }
                        });
                        //   $('#btnWebsitepreview').removeAttr('onclick');
                        //   $('#btnWebsitepreview').attr('onclick', 'ShowSubUserPreview();');
                        $("#btnClearImage").show();
                        setTimeout(function () {
                            if ('@_isImage' == 'True') {
                                toastr.success("Image updated successfully");
                            }
                            else {
                                //toastr.success("Logo and Theme color uploaded successfully");
                            }
                            //LoadCustomWebSite('personalization');
                            //   $("#btnWebsitepreview").attr('disabled', false);
                            //   $("#btnWebsitepreview").css({ 'pointer-events': 'auto' });
                        }, 1000);
                    }
                });
            }
            else {
                $('#loader').hide();
            }
        }
        else {
            $('#lblErrorAttachment').html('');
            $('#lblErrorAttachment').html("Invalid file.");
            $('#lblErrorAttachment').show();
            // $("#btnWebsitepreview").attr('disabled', false);
            // $("#btnWebsitepreview").css({ 'pointer-events': 'auto' });
        }
    }

    //Checking upload file extension
    function checkFileExtension(element) {
        var filePath = element.value;
        var iSize = ($("#Image")[0].files[0].size / 1024);
        if (iSize / 1024 > 2) {
            $('#lblErrorAttachment').show();
            $('#lblErrorAttachment').html("File size cannot be more than 2MB");
            $('#ImgUpload').val('');
            _val = false;
            return false;
        }

        if (filePath.indexOf('.') == -1) {
            _val = false;
            return false;
        }
        var validExtensions = new Array();
        ext = filePath.substring(filePath.lastIndexOf('.') + 1).toLowerCase();
        // validExtensions[0] = 'tiff';
        validExtensions[1] = 'png';
        validExtensions[2] = 'jpg';
        validExtensions[3] = 'jpeg';
        validExtensions[4] = 'gif';
        //validExtensions[5] = 'tif';
        //  validExtensions[6] = 'tiff';

        for (var i = 0; i < validExtensions.length; i++) {
            if (ext == validExtensions[i]) {
                $('#lblErrorAttachment').hide();
                $('#lblErrorAttachment').html('');
                $('#lblUploadError > div').remove();
                var oFReader = new FileReader();
                oFReader.readAsDataURL(document.getElementById("Image").files[0]);
                oFReader.onload = function (oFREvent) {
                    //document.getElementById("ImgUpload").src = oFREvent.target.result;
                    $("#ImgUpload").attr("src", oFREvent.target.result);
                    if ($("#ImgUpload").width > 450 || $("#ImgUpload").height > 400) {
                        ResizeImage($("#ImgUpload"), 400, 450);
                    }
                };
                _val = true;
                return true;
            }
        }
        $('#lblErrorAttachment').html('');
        $('#lblErrorAttachment').show();
        $('#lblErrorAttachment').html("Invalid File");
        _val = false;
        return false;
    }


    function SaveCourse(obj) {

        if ($("#formAddCourse").valid()) {
            $("#btnSaveCourseLoader").show();
            $("#btnSaveCourse").attr('disabled', true);
            $("#LongDescription").val(CKEDITOR.instances['LongDescription'].getData())
            var form = $("#formAddCourse").serialize();

            $.ajax({
                url: '/Admin/SaveCourse',
                type: "POST",
                beforeSend: function (request) {
                    request.setRequestHeader("X-Robots-Tag", "noindex, nofollow");
                },
                data: form,
                success: function (data) {
                    if (data != null && data != false && data != "" && data == true) {
                        if (obj != null && obj != false && obj != "" && obj > 0) {
                            toastr.success("Course updated successfully");
                        }
                        else {
                            toastr.success("Course saved successfully");
                        }
                    }
                    $("#btnSaveCourseLoader").hide();
                    $("#btnSaveCourse").attr('disabled', false);
                    ShowCourse();
                }
            });
        }
    }
</script>